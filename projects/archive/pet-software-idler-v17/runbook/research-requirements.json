{
  "projectName": "PetSoft Tycoon",
  "researchDependencies": {
    "architecture": {
      "category": "Architecture & Patterns",
      "requirements": [
        {
          "topic": "Vertical Slicing Architecture",
          "description": "Feature-complete isolation with private state and public capabilities",
          "priority": "critical",
          "phase": "00-analysis",
          "referenceLocation": "/mnt/c/dev/class-one-rapids/research/quick-ref.md",
          "keyPoints": [
            "Each feature is a mini-application",
            "Private state with public capabilities",
            "No global state objects",
            "Feature folders organization"
          ]
        },
        {
          "topic": "Event-Driven Communication",
          "description": "Loose coupling via EventBus for feature coordination",
          "priority": "critical",
          "phase": "00-analysis",
          "referenceLocation": "/mnt/c/dev/class-one-rapids/research/quick-ref.md",
          "keyPoints": [
            "Features communicate through EventBus",
            "Never import other features directly",
            "Namespace events properly",
            "Async event handling patterns"
          ]
        },
        {
          "topic": "Legend-State v3 Beta Integration",
          "description": "Reactive state management with observables",
          "priority": "critical",
          "phase": "01-foundation",
          "referenceLocation": "/mnt/c/dev/class-one-rapids/research/quick-ref.md",
          "keyPoints": [
            "Observable state with Legend-State",
            "Computed values for UI",
            "React hooks integration",
            "Performance optimization patterns"
          ]
        }
      ]
    },
    "expo": {
      "category": "Expo SDK 53",
      "requirements": [
        {
          "topic": "Expo SDK 53 Setup",
          "description": "Project initialization and configuration",
          "priority": "critical",
          "phase": "01-foundation",
          "referenceLocation": "/mnt/c/dev/class-one-rapids/research/quick-ref.md",
          "keyPoints": [
            "Use npx create-expo-app with TypeScript",
            "Always use npx expo install for dependencies",
            "Never use npm install --legacy-peer-deps",
            "Use expo doctor to check for issues"
          ]
        },
        {
          "topic": "Build and Deployment",
          "description": "EAS Build configuration and app store submission",
          "priority": "high",
          "phase": "05-deployment",
          "referenceLocation": "/mnt/c/dev/class-one-rapids/research/quick-ref.md",
          "keyPoints": [
            "Configure eas.json for different build profiles",
            "Use EAS Build for production builds",
            "Configure app signing credentials",
            "App store submission process"
          ]
        }
      ]
    },
    "gameDesign": {
      "category": "Game Design & Mechanics",
      "requirements": [
        {
          "topic": "Incremental Game Patterns",
          "description": "Core mechanics for idle/incremental games",
          "priority": "high",
          "phase": "02-core-features",
          "referenceLocation": "PRD Section 2.1",
          "keyPoints": [
            "Click mechanics with satisfying feedback",
            "Resource conversion chains",
            "Cost scaling formulas (baseCost Ã— 1.15^owned)",
            "Automation and prestige systems"
          ]
        },
        {
          "topic": "Department Progression System",
          "description": "Unlock progression and department mechanics",
          "priority": "high",
          "phase": "03-integration",
          "referenceLocation": "PRD Sections 3.1-3.6",
          "keyPoints": [
            "Progressive unlock thresholds",
            "Department-specific mechanics",
            "Cross-department synergies",
            "Manager automation systems"
          ]
        }
      ]
    },
    "performance": {
      "category": "Performance & Optimization",
      "requirements": [
        {
          "topic": "React Native Performance",
          "description": "Optimization techniques for smooth gameplay",
          "priority": "high",
          "phase": "04-quality",
          "referenceLocation": "/mnt/c/dev/class-one-rapids/research/quick-ref.md",
          "keyPoints": [
            "Target: 60fps minimum",
            "Memory usage <100MB",
            "State update optimization",
            "EventBus performance patterns"
          ]
        },
        {
          "topic": "Legend-State Performance",
          "description": "Optimizing reactive state updates",
          "priority": "medium",
          "phase": "04-quality",
          "referenceLocation": "/mnt/c/dev/class-one-rapids/research/quick-ref.md",
          "keyPoints": [
            "Computed observables for derived data",
            "Batching state updates",
            "Memory leak prevention",
            "Observer pattern optimization"
          ]
        }
      ]
    },
    "testing": {
      "category": "Testing Strategy",
      "requirements": [
        {
          "topic": "Vertical Slice Testing",
          "description": "Testing isolated features with mocked dependencies",
          "priority": "medium",
          "phase": "04-quality",
          "referenceLocation": "/mnt/c/dev/class-one-rapids/research/quick-ref.md",
          "keyPoints": [
            "Unit tests for each service in isolation",
            "Integration tests for event flow",
            "Mock EventBus for testing",
            "Test coverage for core functionality"
          ]
        }
      ]
    }
  },
  "criticalAntiPatterns": [
    {
      "pattern": "Global State Objects",
      "description": "Violates vertical slicing principles",
      "avoidance": "Each feature owns its complete state",
      "phase": "All phases"
    },
    {
      "pattern": "npm install --legacy-peer-deps",
      "description": "Masks version conflicts and creates future problems",
      "avoidance": "Use npx expo install to resolve properly",
      "phase": "01-foundation"
    },
    {
      "pattern": "Direct Cross-Feature Imports",
      "description": "Creates tight coupling between features",
      "avoidance": "Use EventBus for all feature communication",
      "phase": "All phases"
    },
    {
      "pattern": "Centralized Stores",
      "description": "Anti-pattern for vertical slicing architecture",
      "avoidance": "Each feature has its own service and state",
      "phase": "All phases"
    }
  ],
  "keyCommands": [
    {
      "command": "npx create-expo-app MyApp --template typescript",
      "purpose": "Initialize new Expo project",
      "phase": "01-foundation"
    },
    {
      "command": "npx expo install [package]",
      "purpose": "Install compatible dependencies",
      "phase": "01-foundation"
    },
    {
      "command": "npx expo start --clear",
      "purpose": "Start development server with cache clear",
      "phase": "Development"
    },
    {
      "command": "npx expo doctor",
      "purpose": "Check for project issues",
      "phase": "Development"
    },
    {
      "command": "eas build --profile production --platform all",
      "purpose": "Build production apps for all platforms",
      "phase": "05-deployment"
    }
  ],
  "performanceTargets": {
    "frameRate": "60fps minimum",
    "memoryUsage": "<100MB RAM",
    "loadTime": "<3 seconds",
    "bundleSize": "<10MB",
    "responseTime": "Button interactions <50ms"
  },
  "successMetrics": {
    "technical": {
      "crashRate": "<1% of sessions",
      "saveReliability": "99.9%+ save success rate",
      "offlineAccuracy": "<5% deviation in calculated gains"
    },
    "user": {
      "day7Retention": "30%+ retention rate",
      "averageSession": "15+ minutes",
      "featureAdoption": "70%+ reach Sales unlock, 40%+ reach prestige"
    }
  },
  "researchGaps": [
    {
      "topic": "Advanced Legend-State Patterns",
      "description": "Need more examples of complex observable patterns",
      "priority": "medium",
      "phase": "02-core-features"
    },
    {
      "topic": "Expo Audio Implementation",
      "description": "Best practices for game audio with Expo",
      "priority": "medium", 
      "phase": "04-quality"
    },
    {
      "topic": "EAS Build Optimization",
      "description": "Advanced build configuration and optimization",
      "priority": "low",
      "phase": "05-deployment"
    }
  ],
  "dependencies": {
    "core": [
      "expo@~53.0.0",
      "@legendapp/state@beta",
      "react-native@0.76.5"
    ],
    "additional": [
      "react-native-async-storage",
      "expo-haptics",
      "expo-av",
      "@react-navigation/native",
      "@react-navigation/bottom-tabs"
    ],
    "development": [
      "jest",
      "@testing-library/react-native",
      "eslint",
      "prettier",
      "@typescript-eslint/eslint-plugin"
    ]
  }
}