{
  "researchReference": "/mnt/c/dev/class-one-rapids/research/quick-ref.md",
  "lastUpdated": "2025-08-14T00:00:00Z",
  "applicablePatterns": {
    "architecture": {
      "vertical-slicing": {
        "description": "Each feature owns complete stack (state, components, handlers, validators)",
        "confidence": "high",
        "implementation": "features/{department}/ structure with public APIs",
        "phases": ["01-foundation", "02-core-features"],
        "references": ["quick-ref.md:23", "quick-ref.md:47-57"]
      },
      "feature-folders": {
        "description": "Department-based organization with complete vertical slices",
        "confidence": "high",  
        "implementation": "Each department as independent folder structure",
        "phases": ["00-analysis", "01-foundation", "02-core-features"],
        "references": ["quick-ref.md:25", "quick-ref.md:153-161"]
      },
      "INVEST": {
        "description": "Independent, Negotiable, Valuable, Estimable, Small, Testable",
        "confidence": "high",
        "implementation": "Each department slice follows INVEST principles",
        "phases": ["00-analysis", "01-foundation"],
        "references": ["quick-ref.md:24"]
      }
    },
    "react_native": {
      "new-architecture": {
        "description": "React Native 0.76+ with JSI, Fabric, TurboModules, Hermes enabled",
        "confidence": "critical",
        "implementation": "newArchEnabled=true in gradle.properties, Hermes default",
        "phases": ["00-analysis", "01-foundation"],
        "references": ["quick-ref.md:29-33", "quick-ref.md:72-82"]
      },
      "JSI": {
        "description": "Direct synchronous JS-native communication for performance",
        "confidence": "high",
        "implementation": "Used for performance-critical calculations",
        "phases": ["03-integration", "04-quality"],
        "references": ["quick-ref.md:30"]
      },
      "Fabric": {
        "description": "New rendering system for improved UI performance",
        "confidence": "high",
        "implementation": "Automatic with RN 0.76+ New Architecture",
        "phases": ["01-foundation", "04-quality"],
        "references": ["quick-ref.md:32"]
      },
      "Hermes": {
        "description": "Default JavaScript engine with optimized bytecode",
        "confidence": "high",
        "implementation": "Default in RN 0.76+, no additional config needed",
        "phases": ["00-analysis"],
        "references": ["quick-ref.md:31"]
      }
    },
    "expo": {
      "SDK-53": {
        "description": "Managed workflow with web support and EAS build",
        "confidence": "critical",
        "implementation": "expo: ~53.0.0 in dependencies",
        "phases": ["00-analysis", "01-foundation", "05-deployment"],
        "references": ["quick-ref.md:13", "quick-ref.md:75-76"]
      },
      "managed-workflow": {
        "description": "Expo managed workflow for cross-platform deployment",
        "confidence": "high",
        "implementation": "EAS build for iOS/Android, expo export for web",
        "phases": ["05-deployment"],
        "references": ["quick-ref.md:13"]
      },
      "web-support": {
        "description": "React Native Web integration for browser deployment",
        "confidence": "high",
        "implementation": "npx expo start --web, npx expo export --platform web",
        "phases": ["01-foundation", "05-deployment"],
        "references": ["quick-ref.md:108-118"]
      }
    },
    "state_management": {
      "@legendapp/state@beta": {
        "description": "40% performance improvement over traditional state management",
        "confidence": "critical",
        "implementation": "observable() for per-feature stores, reactive UI updates",
        "phases": ["01-foundation", "02-core-features"],
        "references": ["quick-ref.md:35", "quick-ref.md:90-104"]
      },
      "per-feature-stores": {
        "description": "Each department manages its own observable state",
        "confidence": "high",
        "implementation": "features/{dept}/state/{dept}Store.ts pattern",
        "phases": ["01-foundation", "02-core-features"],
        "references": ["quick-ref.md:95-99"]
      },
      "observable-pattern": {
        "description": "Reactive state updates for UI synchronization",
        "confidence": "high",
        "implementation": "observable() with computed values and public interfaces",
        "phases": ["01-foundation", "02-core-features"],
        "references": ["quick-ref.md:13"]
      }
    },
    "performance": {
      "FlatList-optimization": {
        "description": "Efficient rendering of large lists with fixed heights",
        "confidence": "high",
        "implementation": "getItemLayout, removeClippedSubviews, maxToRenderPerBatch",
        "phases": ["02-core-features", "04-quality"],
        "references": ["quick-ref.md:14", "quick-ref.md:178-184"]
      },
      "lazy-loading": {
        "description": "On-demand loading of components and data",
        "confidence": "medium",
        "implementation": "React.lazy() and dynamic imports for large components",
        "phases": ["04-quality"],
        "references": ["quick-ref.md:14"]
      },
      "memoization": {
        "description": "React.memo, useMemo, useCallback for preventing re-renders",
        "confidence": "high",
        "implementation": "Memoized render functions and callbacks in lists",
        "phases": ["02-core-features", "04-quality"],
        "references": ["quick-ref.md:14"]
      }
    },
    "compression": {
      "markdown>JSON": {
        "description": "15% more token-efficient than JSON for documentation",
        "confidence": "high",
        "implementation": "Documentation in markdown format for better readability",
        "phases": ["00-analysis"],
        "references": ["quick-ref.md:36"]
      },
      "hierarchical-loading": {
        "description": "L0(10)→L1(100)→L2(500)→L3(2000) token structure",
        "confidence": "medium",
        "implementation": "Runbook structured with increasing detail levels",
        "phases": ["00-analysis"],
        "references": ["quick-ref.md:37", "quick-ref.md:122-127"]
      },
      "pattern-language": {
        "description": "Semantic compression preserving meaning vs syntactic",
        "confidence": "medium", 
        "implementation": "Research references use pattern-name: intent format",
        "phases": ["00-analysis"],
        "references": ["quick-ref.md:129-134"]
      }
    },
    "testing": {
      "Jest": {
        "description": "Unit testing framework for JavaScript/TypeScript",
        "confidence": "medium",
        "implementation": "npm test with coverage reporting >95%",
        "phases": ["01-foundation", "04-quality"],
        "references": ["quick-ref.md:15", "quick-ref.md:238"]
      },
      "TDD": {
        "description": "Test-driven development for critical game mechanics",
        "confidence": "medium",
        "implementation": "Write tests before implementation for core features",
        "phases": ["01-foundation", "02-core-features"],
        "references": ["quick-ref.md:281"]
      }
    }
  },
  "performanceTargets": {
    "responseTime": {
      "target": "<50ms",
      "rationale": "User interaction responsiveness requirement",
      "measurement": "Button press to state update duration",
      "phases": ["01-foundation", "04-quality"]
    },
    "frameRate": {
      "target": "60fps",
      "rationale": "Smooth animation and scrolling experience", 
      "measurement": "Sustained frame rate during gameplay",
      "phases": ["02-core-features", "04-quality"]
    },
    "memoryUsage": {
      "target": "<256MB",
      "rationale": "Mobile device memory constraints",
      "measurement": "Peak memory usage during extended play",
      "phases": ["04-quality"]
    },
    "bundleSize": {
      "target": "<100MB",
      "rationale": "App store size limits and download speed",
      "measurement": "Total app size across all platforms",
      "phases": ["05-deployment"]
    },
    "batteryDrain": {
      "target": "<5% per hour",
      "rationale": "Mobile battery life preservation",
      "measurement": "Power consumption during active gameplay",
      "phases": ["04-quality"]
    }
  },
  "technologyStack": {
    "framework": "React Native 0.76+",
    "platform": "Expo SDK 53",
    "stateManagement": "@legendapp/state@beta",
    "buildSystem": "EAS Build",
    "jsEngine": "Hermes (default)",
    "deployment": {
      "ios": "App Store via EAS Submit",
      "android": "Google Play via EAS Submit", 
      "web": "Static export with CDN"
    }
  },
  "verticalSlicingImplementation": {
    "structure": "features/{department}/{state|components|hooks|handlers|validators}/",
    "departments": [
      "development",
      "sales", 
      "customerExperience",
      "product",
      "design",
      "qa",
      "marketing"
    ],
    "sharedComponents": "shared/{ui|audio|persistence|utils}/",
    "publicAPIs": "features/{department}/index.ts exports only",
    "stateIsolation": "No cross-feature imports allowed",
    "testingStrategy": "Per-feature test suites with integration tests"
  },
  "qualityGates": {
    "codeQuality": {
      "eslintCompliance": "Zero warnings required",
      "typeScriptStrict": "Strict mode enabled",
      "testCoverage": ">95% unit test coverage",
      "integrationTests": ">90% critical path coverage"
    },
    "performance": {
      "responseTime": "<50ms for all interactions",
      "frameRate": "60fps sustained",
      "memoryUsage": "<256MB peak",
      "bundleSize": "<100MB total"
    },
    "crossPlatform": {
      "iosCompatibility": "Builds without warnings",
      "androidCompatibility": "Multiple screen sizes supported",
      "webCompatibility": "Full feature parity",
      "performanceParity": "Consistent experience across platforms"
    }
  },
  "riskMitigation": {
    "performanceRisks": {
      "description": "Meeting aggressive performance targets",
      "mitigation": "Regular profiling, FlatList optimization, @legendapp/state benefits"
    },
    "stateComplexity": {
      "description": "Managing complex state across 7 departments",
      "mitigation": "Vertical slicing isolation, public API boundaries"
    },
    "crossPlatformIssues": {
      "description": "Platform-specific behavior differences",
      "mitigation": "Platform-specific testing, PlatformUtils abstraction"
    }
  },
  "successCriteria": {
    "technical": [
      "All performance targets met in production",
      "Zero critical bugs in core game loop",
      "Successful deployment to all platforms",
      ">95% test coverage maintained"
    ],
    "functional": [
      "All 7 departments fully operational",
      "Feature creation and shipping cycle complete",
      "Prestige system functional with investor rounds",
      "Offline progression accurate and reliable"
    ],
    "user": [
      "Smooth 60fps gameplay experience",
      "Intuitive department navigation",
      "Engaging progression mechanics",
      "Reliable save/load functionality"
    ]
  }
}